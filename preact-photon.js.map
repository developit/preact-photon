{"version":3,"sources":["stdin"],"names":[],"mappings":"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","file":"preact-photon.js","sourcesContent":["/** @jsx h */\nimport { h } from 'preact';\n\nconst EMPTY = {};\n\n/** @private */\nlet component = render => (props=EMPTY) => render(props);\n\n/** @private */\nlet c = (...args) => [].concat(...args.filter( x => x )).join(' ');\n\n/** @private */\nlet componentNode = (Name, classes) => component( ({ children, ...props }) => (\n\t<Name {...props} class={c(props.class, classes)}>{children}</Name>\n));\n\n/** App \"footer\" bar, shown at the bottom of a window.\n *\t@class\n */\nexport const Header = componentNode('header', ['toolbar toolbar-header']);\n\n/** App \"header\" bar, shown at the top of a window.\n *\t@class\n */\nexport const Footer = componentNode('footer', ['toolbar toolbar-footer']);\n\n/** Toolbar title.\n *\t@class\n */\nexport const Title = componentNode('h1', 'title');\n\n\n/** Group buttons together.\n *\t@class\n *\t@example\n *\t<ButtonGroup>\n *\t\t<Button>One</Button>\n *\t\t<Button>Two</Button>\n *\t</ButtonGroup>\n */\nexport const ButtonGroup = componentNode('div', 'btn-group');\n\n/** Buttons. They are clickable.\n *\t@class\n *\t@param {object} props\n *\t@param {string} [icon]\t\t\t\tIf supplied, shows the given named icon to the left of the button text\n *\t@param {boolean} [primary=false]\tMake the button display as a default action\n *\t@example\n *\t<Button>Label Text</Button>\n *\t@example\n *\t<Button icon=\"home\">Home</Button>\n *\t@example\n *\t<Button large>Large Button</Button>\n *\t@example\n *\t<Button mini>Small Button</Button>\n *\t@example\n *\t<Button primary>Preferred Action</Button>\n *\t@example\n *\t<Button type=\"positive\">Green</Button>\n *\t@example\n *\t<Button type=\"negative\">Red</Button>\n *\t@example\n *\t<Button type=\"warning\">Yellow</Button>\n */\nexport const Button = component( ({\n\tclass: className,\n\tchildren,\n\ticon,\n\ttype,\n\tprimary,\n\tdropdown,\n\tmini,\n\tlarge,\n\tform,\n\t...props\n}) => (\n\t<button {...props} class={c(\n\t\tclassName,\n\t\t`btn btn-${type || (primary ? 'primary' : 'default')}`,\n\t\tdropdown && 'btn-dropdown',\n\t\tlarge && 'btn-large',\n\t\tmini && 'btn-mini',\n\t\tform && 'btn-form'\n\t)}>\n\t\t{ icon ? (<Icon name={icon} text={ children && children.length ? true : null } />) : null }\n\t\t{ children }\n\t</button>\n));\n\n\n/** A named icon/glyph from the nice built-in list of icons.\n *\t@class\n *\t@example\n *\t<Icon name=\"close\" />\n */\nexport const Icon = component( ({ class:className, text, name, children, ...props }) => (\n\t<span {...props} class={c(className, `icon icon-${name}`, text && 'icon-text')}>{ children }</span>\n));\n\n\n/** Groups tabs together into a horizontal.\n *\t@class\n *\t@example\n *\t<TabGroup>\n *\t\t<Tab>One</Tab>\n *\t\t<Tab>Two</Tab>\n *\t</TabGroup>\n */\nexport const TabGroup = componentNode('div', 'tab-group');\n\n/** For building MDIs. Has a close button by default, add `close=\"false\"` to turn it off.\n *\t@class\n *\t@example\n *\t<Tab>title</Tab>\n *\t@example\n *\t<Tab close=\"false\">title</Tab>\n */\nexport const Tab = component( ({ class:className, close, children, ...props }) => (\n\t<div class={c(className, 'tab-item')}>\n\t\t{ String(close)==='false' ? null : <Icon name=\"cancel\" class=\"icon-close-tab\" /> }\n\t\t{ children }\n\t</div>\n));\n\nTabGroup.Item = Tab;\n\n\n/** Group of sidebar navigation items\n *\t@class\n *\t@example\n *\t<NavGroup>\n *\t\t<NavGroup.Title>Faves</NavGroup.Title>\n *\t\t<NavGroup.Item>Foo</NavGroup.Item>\n *\t</NavGroup>\n */\nexport const NavGroup = componentNode('nav', 'nav-group');\n\n/** Title for a group of navigation items.\n *\t@class\n *\t@example\n *\t<NavGroup.Title>Faves</NavGroup.Title>\n */\nNavGroup.Title = componentNode('h5', 'nav-group-title');\n\n/** A single navigation item with optional icon.\n *\t@class\n *\t@example\n *\t<NavGroup.Item>Home</NavGroup.Item>\n *\t@example\n *\t<NavGroup.Item icon=\"folder\">Documents</NavGroup.Item>\n */\nNavGroup.Item = component( ({ class:className, icon, children, ...props }) => (\n\t<span {...props} class={c(className, 'nav-group-item')}>\n\t\t{ icon ? (<Icon name={icon} />) : null }\n\t\t{ children }\n\t</span>\n));\n\n\n/** Group of list items\n *\t@class\n *\t@example\n *\t<ListGroup>\n *\t\t<ListGroup.Header>\n *\t\t\t<input class=\"form-control\" type=\"text\" placeholder=\"Search...\">\n *\t\t</ListGroup.Header>\n *\t\t<ListGroup.Item>Foo</ListGroup.Item>\n *\t</ListGroup>\n */\nexport const ListGroup = componentNode('ul', 'list-group');\n\n/** Top header item in a list group.\n *\t@class\n *\t@example\n *\t<ListGroup.Header>\n *\t\t<input class=\"form-control\" type=\"text\" placeholder=\"Search...\">\n *\t</ListGroup.Header>\n */\nListGroup.Header = componentNode('li', 'list-group-header');\n\n/** A single navigation item with optional icon.\n *\t@class\n *\t@example\n *\t<ListGroup.Item>Home</ListGroup.Item>\n */\nListGroup.Item = componentNode('li', 'list-group-item');\n\n\n/** HTML `<form>` */\nconst Form = componentNode('form');\n\n/** Basically `<fieldset>` */\nForm.Group = componentNode('div', 'form-group');\n\n/** Basically `<input type=\"checkbox\">` */\nForm.CheckBox = component( ({ class:className, name, checked, value, label, children, ...props }) => (\n\t<div {...props} class={c(className, 'checkbox')}>\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name={name} checked={checked} value={value} />\n\t\t\t{ label || null }\n\t\t\t{ children }\n\t\t</label>\n\t</div>\n));\n\n/** Basically `<input type=\"radio\">` */\nForm.Radio = component( ({ class:className, name, checked, value, label, children, ...props }) => (\n\t<div {...props} class={c(className, 'radio')}>\n\t\t<label>\n\t\t\t<input type=\"radio\" name={name} checked={checked} value={value} />\n\t\t\t{ label || null }\n\t\t\t{ children }\n\t\t</label>\n\t</div>\n));\n\n/** Group buttons at the bottom of a form. */\nForm.Actions = componentNode('div', 'form-actions');\n\n\n/** Just an enhanced `<table>` */\nexport const Table = component( ({ class:className, striped, children, ...props }) => (\n\t<table {...props} class={c(className, striped && 'table-striped')}>\n\t\t{ children }\n\t</table>\n));\n\n\n// export class Header extends Component {\n// \trender({ toolbar, title, children }) {\n// \t\treturn (\n// \t\t\t<header class=\"toolbar toolbar-header\">\n// \t\t\t\t{ title ? (<h1 class=\"title\">{ title }</h1>) : null }\n// \t\t\t\t{ children }\n// \t\t\t</header>\n// \t\t);\n// \t}\n// }\n//\n// export class Button extends Component {\n// \trender({ icon, children }) {\n// \t\treturn (\n// \t\t\t<button class=\"btn btn-default\">\n// \t\t\t\t{ icon ? (<Icon icon=\"home\" text />) : null }\n// \t\t\t\t{ children }\n// \t\t\t</button>\n// \t\t);\n// \t}\n// }\n"]}